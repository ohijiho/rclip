#!/bin/sh

set -e

uuid=CB462B32-16F1-4D49-910D-1151232D6696

tmpd="/tmp/rclip.$uuid.$USER"
clipfile="$tmpd/clip"
sigfile="$tmpd/sig"
bcfile="$tmpd/broadcast"
lock_file="$tmpd/daemon.lock"
hslk_file="$tmpd/handlers.shared.lock"
did_file="$tmpd/daemon.id"

case "$0" in
*/rclip | rclip) ;;
*) # the script executed over ssh
	if which rclip >/dev/null; then
		rclip=rclip
	else
		f() {
			if [ -f "$1" ]; then
				rclip="$1"
			else
				return 1
			fi
		}
		f ~/.rclip/bin/rclip ||
			f ~/.local/bin/rclip ||
			f /usr/local/bin/rclip ||
			f /opt/rclip/bin/rclip ||
			f ~/repos/simple/rclip/rclip ||
			(
				echo 'failed to detect rclip executable' >&2
				exit 1
			)
	fi
	exec "$rclip" handler
	;;
esac

if which uuidgen >/dev/null; then
	uuidgen=uuidgen
elif [ -e /proc/sys/kernel/random/uuid ]; then
	uuidgen='cat /proc/sys/kernel/random/uuid'
else
	uuidgen='echo "$$.$(date)"'
fi

prepare() {
	if ! [ -d "$tmpd" ]; then
		mkdir -p "$tmpd"
		touch "$clipfile"
		mkfifo "$sigfile"
		mkfifo "$bcfile"
	fi
}

if [ "$#" -eq 0 ]; then
	prepare
	"$0" daemon &
	cat >"$clipfile"
	echo >"$sigfile"
	exit
fi

case "$1" in
handler)
	prepare
	"$0" daemon &
	exec perl -e '
    use Fcntl qw(:flock);
    $^F = 9;
    open(my $f, ">&=9") or die "failed to open";
    flock($f, LOCK_SH) or die "failed to flock";
    exec '"'$0'"', "handler-inner";
  ' 9>"$hslk_file"
	;;
handler-inner)
	cat <"$bcfile" >/dev/null
	uuid="$(<"$did_file")"

	while true; do
		if ! [ -f "$did_file" ] || [ "$uuid" != "$(<"$did_file")" ]; then
			echo >&2 'daemon died'
			break
		fi
		x="$(cksum "$clipfile")"
		if [ "$cksum" != "$x" ]; then
			cksum="$x"
			wc -c <"$clipfile"
			cat "$clipfile"
		fi
		cat <"$bcfile"
		echo 0
	done
	;;
clean)
	rm -rf "$tmpd"
	;;
ssh)
	if which xclip >/dev/null; then
		COPY='xclip -selection c'
	elif which pbcopy >/dev/null; then
		COPY='pbcopy'
	else
		echo 'failed to detect clipboard cli' >&2
		exit 1
	fi

	"$@" "$(<"$0")" | (
		while read size; do
			if [ "$size" -ne "$size" ] 2>/dev/null; then
				echo "$size" >&2
			else
				if [ "$size" -ne 0 ]; then
					head -c"$size" | sh -c "$COPY"
				fi
			fi
		done
	)
	;;
daemon)
	log="$tmpd/daemon.log"
	exec >>"$log" 2>&1 </dev/null
	prepare
	exec perl -e '
    use Fcntl qw(:flock);
    $^F = 9;
    open(my $f, ">&=9") or die "failed to open daemon lock";
    flock($f, LOCK_EX | LOCK_NB) or exit;
    exec '"'$0'"', "daemon-inner";
  ' 9>"$lock_file"
	;;
daemon-inner) # broadcast daemon
	uuid="$(sh -c "$uuidgen")"
	echo "$uuid" >"$did_file"

	echo "daemon started: $uuid"

	exec 3<>"$sigfile"
	exec 4<>"$bcfile"

	while true; do
		read -u3 -n1 -t1 a || true
		echo "got signal"
		if ! [ -f "$did_file" ] || [ "$uuid" != "$(<"$did_file")" ]; then
			echo "exit due to clean"
			break
		fi
		if ! perl -e '
      use Fcntl qw(:flock);
      open(my $f, ">&=9") or die "failed to open shared lock";
      flock($f, LOCK_EX | LOCK_NB) and die "no handlers left";
      ' 9>"$hslk_file"; then
			break
		fi
		exec 4>&-
		exec 4<>"$bcfile"
	done
	;;
esac
